%YAML 1.2
---
file_extensions:
  - hny
  - hnm
  - hnx
  - hni
  - hnb
  - hnz
  - hnd
scope: source.honey
contexts:
  main:
    - match: '"'
      scope: punctuation.definition.string.begin.honey
      push: double_quoted_string

    - match: "\'"
      scope: punctuation.definition.string.begin.honey
      push: quoted_string

    - match: '\/\*'
      scope: punctuation.definition.comment.honey
      push: line_comment

    - match: '\b(if|else|for|while|format|package|as|using|fn|return|continue|break)\b'
      scope: keyword.control.honey

    - match: '\b(print|input|getch|main)\b'
      scope: support.function.honey

    - match: 'true|false|null|(pe|elf|bin|dat|dll|mui|efi)_(x86|arm|aarch)_(16|32|64)(_(gui|console))?'
      scope: constant.language.honey

    - match: '\b(Integer|String|Float|Function|Link|Void|Array)\b'
      scope: support.type.honey

    - match: '\;|\:|\(|\)|\,|\.'
      scope: punctuation.separator.honey

    - match: '\b(argv|self|other|this|next)\b'
      scope: variable.parameter.honey

    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.honey

  double_quoted_string:
    - meta_scope: string.quoted.double.honey
    - match: '\\.'
      scope: constant.character.escape.honey
    - match: '"'
      scope: punctuation.definition.string.end.honey
      pop: true

  quoted_string:
    - meta_scope: string.quoted.double.honey
    - match: '\\.'
      scope: constant.character.escape.honey
    - match: "\'"
      scope: punctuation.definition.string.end.honey
      pop: true

  line_comment:
    - meta_scope: comment.line.honey
    - match: '\*\/'
      pop: true